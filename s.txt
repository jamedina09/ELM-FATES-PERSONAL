RUN /bin/sh -c export USER=${USER} # buildkit
USER modeluser
RUN /bin/sh -c cd /home/${USER}     && echo "source /home/${USER}/.bashcd" >> .bashrc # buildkit
ADD .bashcd /home/modeluser # buildkit
RUN /bin/sh -c cd /inventorydata     && mkdir -p bci    && mkdir -p inventory_ctrl     && mkdir -p userdata     && chown $USER bci     && chown $USER inventory_ctrl     && chown $USER userdata     && cd /     && chmod -R 777 /inventorydata # buildkit
RUN /bin/sh -c wget $HLM_REPOSITORY_URL/archive/refs/tags/$HLM_TAG.tar.gz     && tar -zxvf $HLM_TAG.tar.gz     && rm $HLM_TAG.tar.gz     && mv E3SM-$HLM_TAG E3SM     && rm -rf $CIME_LOCATION     && rm -rf $EXT_LOCATION/mct     && rm -rf $EXT_LOCATION/scorpio     && rm -rf $ELM_EXT_LOCATION/fates     && rm -rf $ELM_EXT_LOCATION/mpp     && rm -rf $ELM_EXT_LOCATION/sbetr     && cd /     && wget $FATES_REPOSITORY_URL/archive/refs/tags/$FATES_TAG.tar.gz     && tar -zxvf $FATES_TAG.tar.gz     && rm $FATES_TAG.tar.gz     && mv fates-$FATES_TAG $ELM_EXT_LOCATION/fates     && cd /     && wget $MPP_REPOSITORY_URL/archive/$MPP_HASH.tar.gz     && tar -zxvf $MPP_HASH.tar.gz     && rm $MPP_HASH.tar.gz     && mv MPP-$MPP_HASH $ELM_EXT_LOCATION/mpp     && cd /     && wget $SBETR_REPOSITORY_URL/archive/$SBETR_HASH.tar.gz     && tar -zxvf $SBETR_HASH.tar.gz     && rm $SBETR_HASH.tar.gz     && mv sbetr-$SBETR_HASH $ELM_EXT_LOCATION/sbetr     && cd /     && wget $MCT_REPOSITORY_URL/archive/refs/tags/$MCT_TAG.tar.gz     && tar -zxvf $MCT_TAG.tar.gz     && rm $MCT_TAG.tar.gz     && mv MCT-$MCT_TAG $EXT_LOCATION/mct     && cd /     && wget $SCORPIO_REPOSITORY_URL/archive/refs/tags/$SCORPIO_TAG.tar.gz     && tar -zxvf $SCORPIO_TAG.tar.gz     && rm $SCORPIO_TAG.tar.gz     && mv scorpio-$SCORPIO_TAG $EXT_LOCATION/scorpio     && cd /     && wget $CIME_REPOSITORY_URL/archive/refs/tags/$CIME_TAG.tar.gz     && tar -zxvf $CIME_TAG.tar.gz     && rm $CIME_TAG.tar.gz     && mv cime-$CIME_TAG $CIME_LOCATION     && cd /.cime     && wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config     && wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config_compilers.xml     && wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config_machines.xml     && wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/gnu_docker.cmake     && cd /home/$USER/.cime     && wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config     && wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config_compilers.xml     && wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config_machines.xml     && wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/gnu_docker.cmake     && cd /     && ln -s /usr/bin/ncap2 /usr/bin/ncap     && chown $USER:dockerusers /E3SM     && chmod -R 777 /E3SM     && export USER=${USER} # buildkit
RUN /bin/sh -c cd /     && mkdir -p inputdata     && mkdir -p inventorydata     && mkdir -p sitedata     && mkdir -p example_inputs     && mkdir -p output     && mkdir -p scripts     && mkdir -p paramfiles     && mkdir -p tools     && mkdir -p tools/cprnc     && mkdir -p baselines     && mkdir -p .cime     && mkdir -p home/$USER/.cime     && chown $USER inputdata     && chown $USER inventorydata     && chown $USER sitedata     && chown $USER example_inputs     && chown $USER output     && chown $USER scripts     && chown $USER paramfiles     && chown $USER tools     && chown $USER tools/cprnc     && chown $USER baselines     && chown $USER .cime     && chown $USER /home/$USER/.cime     && cd / # buildkit
RUN /bin/sh -c groupadd -r dockerusers     && useradd -ms /bin/bash $USER -u 1000 -g dockerusers     && chown $USER:dockerusers /home/$USER # buildkit
ENV USER=modeluser
ENV TOOLS_REPOSITORY_RAW_URL=https://raw.githubusercontent.com/NGEET/tutorial-containers
ENV REPOSITORY_RAW_URL=https://raw.githubusercontent.com/NGEET/tutorial-containers
ENV REPO_BRANCH=ngeet-2024
ENV CIME_LOCATION=/E3SM/cime/
ENV CIME_REPOSITORY_URL=https://github.com/ESMCI/cime/
ENV SCORPIO_REPOSITORY_URL=https://github.com/E3SM-Project/scorpio/
ENV MCT_REPOSITORY_URL=https://github.com/MCSclimate/MCT/
ENV EXT_LOCATION=/E3SM/externals/
ENV ELM_EXT_LOCATION=/E3SM/components/elm/src/external_models/
ENV SBETR_REPOSITORY_URL=https://github.com/BeTR-biogeochemistry-modeling/sbetr/
ENV MPP_REPOSITORY_URL=https://github.com/MPP-LSM/MPP/
ENV FATES_REPOSITORY_URL=https://github.com/NGEET/FATES/
ENV HLM_REPOSITORY_URL=https://github.com/NGEET/E3SM/
ENV SBETR_HASH=66260f4991d61439d4cba92eb633590b09f97920
ENV MPP_HASH=c0c903e675e31e6b9ab447b0cc51ccd8a36fa7a7
ENV SCORPIO_TAG=scorpio-v1.6.4
ENV MCT_TAG=MCT_2.11.0
ENV CIME_TAG=cime6.0.248
ENV HLM_TAG=elm_v3.0.0-fates_sci.1.76.4_api.35.1.0
ENV FATES_TAG=sci.1.76.4_api.35.1.0
LABEL maintainer.name=Gregory Lemieux maintainer.email=glemieux@lbl.gov author.name=Shawn P. Serbin author.email=sserbin@bnl.gov description=ELM host land model version.hlm=elm_v3-for-ngee version.baseos=gcc8.5
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c ln -sf /usr/bin/python3 /usr/bin/python # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c pip3 install 'scipy==1.11.4' 'netCDF4==1.7.1' # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c cd /     && mkdir -p /usr/local/netcdf     && wget https://downloads.unidata.ucar.edu/netcdf-c/4.8.1/netcdf-c-4.8.1.tar.gz     && tar -zxvf netcdf-c-4.8.1.tar.gz     && cd netcdf-c-4.8.1     && export H5DIR=/usr/local/hdf5     && export NCDIR=/usr/local/netcdf     && CC=mpicc CPPFLAGS=-I${H5DIR}/include LDFLAGS=-L${H5DIR}/lib ./configure --enable-parallel-tests --prefix=${NCDIR}     && make     && make install     && export PATH=/usr/local/netcdf/bin:$PATH     && export LD_LIBRARY_PATH=/usr/local/netcdf/lib     && cd /     && rm -r netcdf-c-4.8.1     && rm netcdf-c-4.8.1.tar.gz     && wget https://downloads.unidata.ucar.edu/netcdf-fortran/4.5.4/netcdf-fortran-4.5.4.tar.gz     && tar -zxvf netcdf-fortran-4.5.4.tar.gz     && cd netcdf-fortran-4.5.4     && export NCDIR=/usr/local/netcdf     && export NFDIR=/usr/local/netcdf     && FC=mpif90 CPPFLAGS=-I${NCDIR}/include LDFLAGS=-L${NCDIR}/lib ./configure --prefix=${NFDIR} --enable-parallel-tests     && make     && make install     && cd /     && rm -r netcdf-fortran-4.5.4     && rm netcdf-fortran-4.5.4.tar.gz # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c cd /     && mkdir -p /usr/local/hdf5     && wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/hdf5-1.12.1.tar.gz     && tar -zxvf hdf5-1.12.1.tar.gz     && cd hdf5-1.12.1     && CC=mpicc ./configure --enable-fortran --enable-parallel --prefix=/usr/local/hdf5     && make     && make install     && export PATH=/usr/local/hdf5/bin:$PATH     && export LD_LIBRARY_PATH=/usr/local/hdf5/lib/libhdf5     && cd /     && rm -r hdf5-1.12.1     && rm hdf5-1.12.1.tar.gz # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c cd /     && wget https://github.com/libexpat/libexpat/releases/download/R_2_4_7/expat-2.4.7.tar.bz2     && tar -xvjf expat-2.4.7.tar.bz2     && cd expat-2.4.7     && ./configure     && make     && make install     && cd /     && rm -r expat-2.4.7     && rm expat-2.4.7.tar.bz2 # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c cd /     && wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-${OPENMPI_VERSION}.tar.gz     && tar -zxvf openmpi-${OPENMPI_VERSION}.tar.gz     && cd openmpi-${OPENMPI_VERSION}     && export PATH=/usr/local/bin:$PATH     && export LD_LIBRARY_PATH=/usr/local/lib64:$LD_LIBRARY_PATH     && ./configure --enable-static     && make     && make install     && cd /     && rm -r openmpi-${OPENMPI_VERSION}     && rm openmpi-${OPENMPI_VERSION}.tar.gz     && ldconfig # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c locale -a # buildkit
ENV LANGUAGE=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=C.UTF-8
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen &&       locale-gen # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c dpkg-reconfigure locales &&   locale-gen C.UTF-8 &&     /usr/sbin/update-locale LANG=C.UTF-8 # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c apt-get update -y     && apt-get install -y     cmake     git     subversion     bzip2     libgmp3-dev     m4     wget     libcurl4-openssl-dev     zlib1g-dev     libncurses5-dev     libxml2     libxml2-dev     csh     liblapack-dev     libblas-dev     liblapack-dev     libffi7     libffi-dev     libxml-libxml-perl     libxml2-utils     vim     libudunits2-0     libudunits2-dev     udunits-bin     python3     python3-dev     python3-pip     apt-utils     ftp     apt-transport-https     libssl-dev     openssl     libncurses5-dev     libsqlite3-dev     gsl-bin     libgsl-dev     flex     nco     locales     && rm -rf /var/lib/apt/lists/*     && apt-get clean all # buildkit
ENV HDF5_DIR=/usr/local/hdf5
ENV LD_LIBRARY_PATH=/usr/local/lib64::/usr/local/hdf5/lib:/usr/local/netcdf/lib
ENV LD_LIBRARY_PATH=/usr/local/lib64::/usr/local/hdf5/lib
ENV PATH=/usr/local/netcdf/bin:/usr/local/hdf5/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV PATH=/usr/local/hdf5/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV LD_LIBRARY_PATH=/usr/local/lib64:
ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ARG NETCDF_FORTRAN_VERSION=4.5.3
ARG NETCDF_VERSION=4.9.0.3
ARG HDF5_VERSION=1.12.2.3
ARG EXPAT_VERSION=2.4.7
ARG OPENMPI_VERSION=4.1.4
LABEL maintainer.name=Gregory Lemieux maintainer.email=glemieux@lbl.gov author.name=Shawn P. Serbin author.email=sserbin@bnl.gov description=GCC-based image loaded with necessary dependencies for building HLM/HLM-FATES images
/bin/sh -c set -ex; 	dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc; 	dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++; 	dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran; 	update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999
/bin/sh -c set -ex; 	{ echo '/usr/local/lib64'; echo '/usr/local/lib'; } > /etc/ld.so.conf.d/000-local-lib.conf; 	ldconfig -v
/bin/sh -c set -ex; 		savedAptMark="$(apt-mark showmanual)"; 	apt-get update; 	apt-get install -y --no-install-recommends 		dpkg-dev 		flex 	; 	rm -r /var/lib/apt/lists/*; 		_fetch() { 		local fetch="$1"; shift; 		local file="$1"; shift; 		for mirror in $GCC_MIRRORS; do 			if curl -fL "$mirror/$fetch" -o "$file"; then 				return 0; 			fi; 		done; 		echo >&2 "error: failed to download '$fetch' from several mirrors"; 		return 1; 	}; 		_fetch "gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig" 'gcc.tar.xz.sig'; 	_fetch "gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz" 'gcc.tar.xz'; 	gpg --batch --verify gcc.tar.xz.sig gcc.tar.xz; 	mkdir -p /usr/src/gcc; 	tar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1; 	rm gcc.tar.xz*; 		cd /usr/src/gcc; 		./contrib/download_prerequisites; 	{ rm *.tar.* || true; }; 		for f in config.guess config.sub; do 		wget -O "$f" "https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb"; 		find -mindepth 2 -name "$f" -exec cp -v "$f" '{}' ';'; 	done; 		dir="$(mktemp -d)"; 	cd "$dir"; 		extraConfigureArgs=''; 	dpkgArch="$(dpkg --print-architecture)"; 	case "$dpkgArch" in 		armel) 			extraConfigureArgs="$extraConfigureArgs --with-arch=armv4t --with-float=soft" 			;; 		armhf) 			extraConfigureArgs="$extraConfigureArgs --with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb" 			;; 				i386) 			osVersionID="$(set -e; . /etc/os-release; echo "$VERSION_ID")"; 			case "$osVersionID" in 				8) extraConfigureArgs="$extraConfigureArgs --with-arch-32=i586" ;; 				*) extraConfigureArgs="$extraConfigureArgs --with-arch-32=i686" ;; 			esac; 			;; 	esac; 		gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"; 	/usr/src/gcc/configure 		--build="$gnuArch" 		--disable-multilib 		--enable-languages=c,c++,fortran,go 		$extraConfigureArgs 	; 	make -j "$(nproc)"; 	make install-strip; 		cd ..; 		rm -rf "$dir" /usr/src/gcc; 		apt-mark auto '.*' > /dev/null; 	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; 	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
/bin/sh -c #(nop)  ENV GCC_VERSION=11.2.0
/bin/sh -c #(nop)  ENV GCC_MIRRORS=https://ftpmirror.gnu.org/gcc 		https://mirrors.kernel.org/gnu/gcc 		https://bigsearcher.com/mirrors/gcc/releases 		http://www.netgull.com/gcc/releases 		https://ftpmirror.gnu.org/gcc 		ftp://ftp.gnu.org/gnu/gcc
/bin/sh -c set -ex; 	for key in $GPG_KEYS; do 		gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; 	done
/bin/sh -c #(nop)  ENV GPG_KEYS=B215C1633BCA0477615F1B35A5B3A004745C015A 	B3C42148A44E6983B3E4CC0793FA9B1AB75C61B8 	90AA470469D3965A87A5DCB494D03953902C9419 	80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C 	7F74F97C103468EE5D750B583AB00996FC26A641 	33C235A34C46AA3FFB293709A328C3A2C3C45C06 	D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62
/bin/sh -c set -ex; 	if ! command -v gpg > /dev/null; then 		apt-get update; 		apt-get install -y --no-install-recommends 			gnupg 			dirmngr 		; 		rm -rf /var/lib/apt/lists/*; 	fi
/bin/sh -c set -ex; 	apt-get update; 	apt-get install -y --no-install-recommends 		autoconf 		automake 		bzip2 		dpkg-dev 		file 		g++ 		gcc 		imagemagick 		libbz2-dev 		libc6-dev 		libcurl4-openssl-dev 		libdb-dev 		libevent-dev 		libffi-dev 		libgdbm-dev 		libglib2.0-dev 		libgmp-dev 		libjpeg-dev 		libkrb5-dev 		liblzma-dev 		libmagickcore-dev 		libmagickwand-dev 		libmaxminddb-dev 		libncurses5-dev 		libncursesw5-dev 		libpng-dev 		libpq-dev 		libreadline-dev 		libsqlite3-dev 		libssl-dev 		libtool 		libwebp-dev 		libxml2-dev 		libxslt-dev 		libyaml-dev 		make 		patch 		unzip 		xz-utils 		zlib1g-dev 				$( 			if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then 				echo 'default-libmysqlclient-dev'; 			else 				echo 'libmysqlclient-dev'; 			fi 		) 	; 	rm -rf /var/lib/apt/lists/*
/bin/sh -c apt-get update && apt-get install -y --no-install-recommends 		git 		mercurial 		openssh-client 		subversion 				procps 	&& rm -rf /var/lib/apt/lists/*
/bin/sh -c set -ex; 	if ! command -v gpg > /dev/null; then 		apt-get update; 		apt-get install -y --no-install-recommends 			gnupg 			dirmngr 		; 		rm -rf /var/lib/apt/lists/*; 	fi
/bin/sh -c set -eux; 	apt-get update; 	apt-get install -y --no-install-recommends 		ca-certificates 		curl 		netbase 		wget 	; 	rm -rf /var/lib/apt/lists/*
/bin/sh -c #(nop)  CMD ["bash"]
/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / 