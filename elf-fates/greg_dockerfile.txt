ARG OPENMPI_VERSION=4.1.4
ARG EXPAT_VERSION=2.4.7
ARG NETCDF_FORTRAN_VERSION=4.5.3
ARG NETCDF_VERSION=4.9.0.3
ARG HDF5_VERSION=1.12.2.3

ENV HDF5_DIR=/usr/local/hdf5
ENV LD_LIBRARY_PATH=/usr/local/lib64::/usr/local/hdf5/lib:/usr/local/netcdf/lib
ENV LD_LIBRARY_PATH=/usr/local/lib64::/usr/local/hdf5/lib
ENV PATH=/usr/local/netcdf/bin:/usr/local/hdf5/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV PATH=/usr/local/hdf5/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV LD_LIBRARY_PATH=/usr/local/lib64:
ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen &&       locale-gen # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c dpkg-reconfigure locales &&   locale-gen C.UTF-8 &&     /usr/sbin/update-locale LANG=C.UTF-8 # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c apt-get update -y     && apt-get install -y     cmake     git     subversion     bzip2     libgmp3-dev     m4     wget     libcurl4-openssl-dev     zlib1g-dev     libncurses5-dev     libxml2     libxml2-dev     csh     liblapack-dev     libblas-dev     liblapack-dev     libffi7     libffi-dev     libxml-libxml-perl     libxml2-utils     vim     libudunits2-0     libudunits2-dev     udunits-bin     python3     python3-dev     python3-pip     apt-utils     ftp     apt-transport-https     libssl-dev     openssl     libncurses5-dev     libsqlite3-dev     gsl-bin     libgsl-dev     flex     nco     locales     && rm -rf /var/lib/apt/lists/*     && apt-get clean all # buildkit

ENV LANGUAGE=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=C.UTF-8

RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c ln -sf /usr/bin/python3 /usr/bin/python # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c pip3 install 'scipy==1.11.4' 'netCDF4==1.7.1' # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c cd /     && mkdir -p /usr/local/netcdf     && wget https://downloads.unidata.ucar.edu/netcdf-c/4.8.1/netcdf-c-4.8.1.tar.gz     && tar -zxvf netcdf-c-4.8.1.tar.gz     && cd netcdf-c-4.8.1     && export H5DIR=/usr/local/hdf5     && export NCDIR=/usr/local/netcdf     && CC=mpicc CPPFLAGS=-I${H5DIR}/include LDFLAGS=-L${H5DIR}/lib ./configure --enable-parallel-tests --prefix=${NCDIR}     && make     && make install     && export PATH=/usr/local/netcdf/bin:$PATH     && export LD_LIBRARY_PATH=/usr/local/netcdf/lib     && cd /     && rm -r netcdf-c-4.8.1     && rm netcdf-c-4.8.1.tar.gz     && wget https://downloads.unidata.ucar.edu/netcdf-fortran/4.5.4/netcdf-fortran-4.5.4.tar.gz     && tar -zxvf netcdf-fortran-4.5.4.tar.gz     && cd netcdf-fortran-4.5.4     && export NCDIR=/usr/local/netcdf     && export NFDIR=/usr/local/netcdf     && FC=mpif90 CPPFLAGS=-I${NCDIR}/include LDFLAGS=-L${NCDIR}/lib ./configure --prefix=${NFDIR} --enable-parallel-tests     && make     && make install     && cd /     && rm -r netcdf-fortran-4.5.4     && rm netcdf-fortran-4.5.4.tar.gz # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c cd /     && mkdir -p /usr/local/hdf5     && wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/hdf5-1.12.1.tar.gz     && tar -zxvf hdf5-1.12.1.tar.gz     && cd hdf5-1.12.1     && CC=mpicc ./configure --enable-fortran --enable-parallel --prefix=/usr/local/hdf5     && make     && make install     && export PATH=/usr/local/hdf5/bin:$PATH     && export LD_LIBRARY_PATH=/usr/local/hdf5/lib/libhdf5     && cd /     && rm -r hdf5-1.12.1     && rm hdf5-1.12.1.tar.gz # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c cd /     && wget https://github.com/libexpat/libexpat/releases/download/R_2_4_7/expat-2.4.7.tar.bz2     && tar -xvjf expat-2.4.7.tar.bz2     && cd expat-2.4.7     && ./configure     && make     && make install     && cd /     && rm -r expat-2.4.7     && rm expat-2.4.7.tar.bz2 # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c cd /     && wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-${OPENMPI_VERSION}.tar.gz     && tar -zxvf openmpi-${OPENMPI_VERSION}.tar.gz     && cd openmpi-${OPENMPI_VERSION}     && export PATH=/usr/local/bin:$PATH     && export LD_LIBRARY_PATH=/usr/local/lib64:$LD_LIBRARY_PATH     && ./configure --enable-static     && make     && make install     && cd /     && rm -r openmpi-${OPENMPI_VERSION}     && rm openmpi-${OPENMPI_VERSION}.tar.gz     && ldconfig # buildkit
RUN |5 OPENMPI_VERSION=4.1.4 EXPAT_VERSION=2.4.7 HDF5_VERSION=1.12.2.3 NETCDF_VERSION=4.9.0.3 NETCDF_FORTRAN_VERSION=4.5.3 /bin/sh -c locale -a # buildkit

LABEL maintainer.name=Gregory Lemieux maintainer.email=glemieux@lbl.gov author.name=Shawn P. Serbin author.email=sserbin@bnl.gov description=ELM host land model version.hlm=elm_v3-for-ngee version.baseos=gcc8.5

ENV USER=modeluser
ENV TOOLS_REPOSITORY_RAW_URL=https://raw.githubusercontent.com/NGEET/tutorial-containers
ENV REPOSITORY_RAW_URL=https://raw.githubusercontent.com/NGEET/tutorial-containers
ENV REPO_BRANCH=ngeet-2024
ENV CIME_LOCATION=/E3SM/cime/
ENV CIME_REPOSITORY_URL=https://github.com/ESMCI/cime/
ENV SCORPIO_REPOSITORY_URL=https://github.com/E3SM-Project/scorpio/
ENV MCT_REPOSITORY_URL=https://github.com/MCSclimate/MCT/
ENV EXT_LOCATION=/E3SM/externals/
ENV ELM_EXT_LOCATION=/E3SM/components/elm/src/external_models/
ENV SBETR_REPOSITORY_URL=https://github.com/BeTR-biogeochemistry-modeling/sbetr/
ENV MPP_REPOSITORY_URL=https://github.com/MPP-LSM/MPP/
ENV FATES_REPOSITORY_URL=https://github.com/NGEET/FATES/
ENV HLM_REPOSITORY_URL=https://github.com/NGEET/E3SM/
ENV SBETR_HASH=66260f4991d61439d4cba92eb633590b09f97920
ENV MPP_HASH=c0c903e675e31e6b9ab447b0cc51ccd8a36fa7a7
ENV SCORPIO_TAG=scorpio-v1.6.4
ENV MCT_TAG=MCT_2.11.0
ENV CIME_TAG=cime6.0.248
ENV HLM_TAG=elm_v3.0.0-fates_sci.1.76.4_api.35.1.0
ENV FATES_TAG=sci.1.76.4_api.35.1.0



# Create a group and user
RUN groupadd -r dockerusers && \
    useradd -ms /bin/bash $USER -u 1000 -g dockerusers && \
    chown $USER:dockerusers /home/$USER  # buildkit

# Create directories and assign ownership
RUN mkdir -p /inputdata /inventorydata /sitedata /example_inputs /output /scripts /paramfiles /tools/cprnc /baselines /.cime /home/$USER/.cime && \
    chown $USER /inputdata /inventorydata /sitedata /example_inputs /output /scripts /paramfiles /tools /tools/cprnc /baselines /.cime /home/$USER/.cime  && \
    chown $USER:dockerusers /home/$USER/.cime && \
    cd /  # buildkit

# Download and extract HLM, FATES, MPP, SBETR, MCT, SCORPIO, CIME repositories
RUN wget $HLM_REPOSITORY_URL/archive/refs/tags/$HLM_TAG.tar.gz && \
    tar -zxvf $HLM_TAG.tar.gz && rm $HLM_TAG.tar.gz && \
    mv E3SM-$HLM_TAG E3SM && \
    rm -rf $CIME_LOCATION $EXT_LOCATION/mct $EXT_LOCATION/scorpio $ELM_EXT_LOCATION/fates $ELM_EXT_LOCATION/mpp $ELM_EXT_LOCATION/sbetr && \
    wget $FATES_REPOSITORY_URL/archive/refs/tags/$FATES_TAG.tar.gz && \
    tar -zxvf $FATES_TAG.tar.gz && rm $FATES_TAG.tar.gz && \
    mv fates-$FATES_TAG $ELM_EXT_LOCATION/fates && \
    wget $MPP_REPOSITORY_URL/archive/$MPP_HASH.tar.gz && \
    tar -zxvf $MPP_HASH.tar.gz && rm $MPP_HASH.tar.gz && \
    mv MPP-$MPP_HASH $ELM_EXT_LOCATION/mpp && \
    wget $SBETR_REPOSITORY_URL/archive/$SBETR_HASH.tar.gz && \
    tar -zxvf $SBETR_HASH.tar.gz && rm $SBETR_HASH.tar.gz && \
    mv sbetr-$SBETR_HASH $ELM_EXT_LOCATION/sbetr && \
    wget $MCT_REPOSITORY_URL/archive/refs/tags/$MCT_TAG.tar.gz && \
    tar -zxvf $MCT_TAG.tar.gz && rm $MCT_TAG.tar.gz && \
    mv MCT-$MCT_TAG $EXT_LOCATION/mct && \
    wget $SCORPIO_REPOSITORY_URL/archive/refs/tags/$SCORPIO_TAG.tar.gz && \
    tar -zxvf $SCORPIO_TAG.tar.gz && rm $SCORPIO_TAG.tar.gz && \
    mv scorpio-$SCORPIO_TAG $EXT_LOCATION/scorpio && \
    wget $CIME_REPOSITORY_URL/archive/refs/tags/$CIME_TAG.tar.gz && \
    tar -zxvf $CIME_TAG.tar.gz && rm $CIME_TAG.tar.gz && \
    mv cime-$CIME_TAG $CIME_LOCATION && \
    cd /.cime && \
    wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config && \
    wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config_compilers.xml && \
    wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config_machines.xml && \
    wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/gnu_docker.cmake && \
    cd /home/$USER/.cime && \
    wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config && \
    wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config_compilers.xml && \
    wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/config_machines.xml && \
    wget $REPOSITORY_RAW_URL/$REPO_BRANCH/docker/elm/cime_config/gnu_docker.cmake && \
    ln -s /usr/bin/ncap2 /usr/bin/ncap && \
    chown $USER:dockerusers /E3SM && \
    chmod -R 777 /E3SM && \
    export USER=${USER}  # buildkit

# Setup inventorydata directories and permissions
RUN mkdir -p /inventorydata/bci /inventorydata/inventory_ctrl /inventorydata/userdata && \
    chown $USER /inventorydata/bci /inventorydata/inventory_ctrl /inventorydata/userdata && \
    chmod -R 777 /inventorydata  # buildkit

# Add bash configuration
ADD .bashcd /home/modeluser  # buildkit

# Configure bashrc for modeluser
RUN cd /home/${USER} && \
    echo "source /home/${USER}/.bashcd" >> .bashrc  # buildkit

# Switch to modeluser
USER modeluser

# Export USER environment variable
RUN export USER=${USER}  # buildkit







